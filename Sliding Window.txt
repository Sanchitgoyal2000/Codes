#include <stdio.h>
#include <stdlib.h>
int *maxone(int *A,int n1,int B,int *lenl);
int main()
{
 int a[7]={1,1,1,0,1,0,1};
 int n=7,k=0;
 int length=0;
 int *p=maxone(a,n,k,&length);
 for(int i=0;i<length;i++)
 {
  printf("%d ",p[i]);
 }
}
int *maxone(int *A,int n1,int B,int *lenl)
{
 int l=0,r=0,max=0,count_zero=B,left=0,right=0;
 int *res=(int *)malloc(n1*sizeof(int));
 while(r<n1)
 {
  if(A[r]==1)
   r++;
  else if(A[r]==0 && count_zero)
  {
   r++;
   count_zero--;
  }
  else
  {
   while(A[l]!=0)
   {
    l++;
   }
   l++;
   if(count_zero<B)
    count_zero++;
  }
   if(l>r)         // if no of bits to be flipped are zero
    {
     break;
    }
   if((r-l)>max)
   {
    max=r-l;
    left=l;
    right=r;
   }
 }
 int i=0;
 for(i=0;i<max;i++)
 res[i]=left+i;
// printf("%d",max);
 *lenl=max;
 return res;
}
